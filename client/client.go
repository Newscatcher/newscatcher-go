// This file was auto-generated by Fern from our API Definition.

package client

import (
	authors "github.com/Newscatcher/newscatcher-go/authors"
	core "github.com/Newscatcher/newscatcher-go/core"
	internal "github.com/Newscatcher/newscatcher-go/internal"
	latestheadlines "github.com/Newscatcher/newscatcher-go/latestheadlines"
	option "github.com/Newscatcher/newscatcher-go/option"
	search "github.com/Newscatcher/newscatcher-go/search"
	searchlink "github.com/Newscatcher/newscatcher-go/searchlink"
	searchsimilar "github.com/Newscatcher/newscatcher-go/searchsimilar"
	sources "github.com/Newscatcher/newscatcher-go/sources"
	subscription "github.com/Newscatcher/newscatcher-go/subscription"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	Search          *search.Client
	Latestheadlines *latestheadlines.Client
	Authors         *authors.Client
	SearchLink      *searchlink.Client
	Searchsimilar   *searchsimilar.Client
	Sources         *sources.Client
	Subscription    *subscription.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:          options.ToHeader(),
		Search:          search.NewClient(opts...),
		Latestheadlines: latestheadlines.NewClient(opts...),
		Authors:         authors.NewClient(opts...),
		SearchLink:      searchlink.NewClient(opts...),
		Searchsimilar:   searchsimilar.NewClient(opts...),
		Sources:         sources.NewClient(opts...),
		Subscription:    subscription.NewClient(opts...),
	}
}
